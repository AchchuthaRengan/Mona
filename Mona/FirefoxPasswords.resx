<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>